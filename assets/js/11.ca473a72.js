(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{412:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("p",[t._v("文件操作编码知识\n")]),t._v(" "),s("h3",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("项目开发中，遇到一个需求：后端返回 json，json中某个字段存有文件的 base64值，然后前端将文件导出下载，即")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"文件base64编码值"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("其实最简单的应该就是将 base64补上前缀，就可以传给 a标签下载了，但是当时就是脑子一抽，非要搞点花里胡哨的，结果就成了这样：")]),t._v(" "),s("ul",[s("li",[t._v("先在前端模拟生成文件的 base64编码值")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file'")]),t._v(" @change"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("change")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" file "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("files"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reader "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    reader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readAsDataURL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    reader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" dataURL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" reader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("result\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" base64Str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dataURL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// , 后面的才是数据对应的 base64码，此处的 base4字符串与后端返回的一致")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("将 base64含有的实际二进制数据存入 ArrayBuffer")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 先将 base64解码, TextDecoder并不能解码 base64，只能用 atob")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("atob")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("base64"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 为什么用 Unit8Array? 因为 atob是使用 Latin1编码，即 1字节映射一个字符，将字符编码再传入 Uint8Array中，方能生成相同的二进制数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" uint8 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Uint8Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    uint8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("charCodeAt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 放入 Blob再生成 url, type代表 blob的数据类型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" blob "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Blob")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("uint8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'application/vnd.ms-excel'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createObjectURL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("blob"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 利用 a标签下载")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" url\na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("download "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'导出.xls'")]),t._v("\na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("click")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("如果你看懂了，那么你可以点击右上角的关闭按钮，咱们拜拜。如果没有看懂，那说明你对其中一些细微知识不甚了解，接下来我们就开始好好聊聊了。")]),t._v(" "),s("p",[t._v("上面代码片段中涉及的主要知识点有：")]),t._v(" "),s("ul",[s("li",[t._v("FileReader的用法")]),t._v(" "),s("li",[t._v("二进制数组 ArrayBuffer、TypeArray的使用")]),t._v(" "),s("li",[t._v("atob编码原理（包括 Latin1编码、base64编码）")])]),t._v(" "),s("p",[t._v("前面两个在《前端文件操作基础知识（一）文件对象篇》有介绍，最后一个将在本篇进行阐述。")]),t._v(" "),s("h4",{attrs:{id:"javascript中的编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript中的编码","aria-hidden":"true"}},[t._v("#")]),t._v(" javascript中的编码")]),t._v(" "),s("p",[t._v("ES6默认采用 utf-16编码，并且是小端字节序，比如：'a'的 unicode编码为 97, 它的二进制表示为 0110 0001，而在 js中，由于是 utf-16编码且为小端字节序，\n那么将存它将被存储为 0110 0001 0000 0000  共两个字节，即")]),t._v(" "),s("p",[t._v("a -> 97 -> 0110 0001 -> 0110 0001 0000 0000")]),t._v(" "),s("h4",{attrs:{id:"textencode和-textdecode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#textencode和-textdecode","aria-hidden":"true"}},[t._v("#")]),t._v(" TextEncode和 TextDecode")]),t._v(" "),s("p",[t._v("既然 ES6是采用 utf-16编码的，而我们常用的却是 utf-8编码，那你肯定就会想怎么才能在 ES6中进行 utf-8编码呢，对吧？")]),t._v(" "),s("p",[t._v("这里介绍两个方法：")]),t._v(" "),s("ul",[s("li",[t._v("TextEncoder")])]),t._v(" "),s("blockquote",[s("p",[t._v("编码，按指定编码格式（默认 utf-8）对字符进行编码，并返回 uint8Array")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" encoder "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TextEncoder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数默认 utf-8，可以为 utf-16, gbk等其它编码格式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'需要编码的字符串'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" uin8 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" encoder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("encode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 uint8Array")]),t._v("\n")])])]),s("ul",[s("li",[t._v("TextDecoder")])]),t._v(" "),s("blockquote",[s("p",[t._v("解码，按指定编码格式（默认 utf-8）对 ArrayBuffer/ TypedArray 进行解码")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" decoder "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TextDecoder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数默认 utf-8，可以为 utf-16, gbk等其它编码格式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" uint8 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Uint8Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("97")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("98")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decoder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("decode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uint8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'abc'")]),t._v("\n")])])]),s("p",[t._v("总结：借助 TextEncoder和 TextDecoder实现字符串与二进制的互相转化。")]),t._v(" "),s("h4",{attrs:{id:"base64-编码原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#base64-编码原理","aria-hidden":"true"}},[t._v("#")]),t._v(" base64 编码原理")]),t._v(" "),s("p",[t._v("base64编码一共有64个字符加一个垫字的 '=', 共65个字符，所以只需要 6bit便能刚好映射完 base64字符（2^6 = 64）。")]),t._v(" "),s("p",[t._v("base64编码流程大体如下：")]),t._v(" "),s("ul",[s("li",[t._v("1、将二进制数据按每6位为一组进行分组")]),t._v(" "),s("li",[t._v("2、最后一组数据则补足6位")]),t._v(" "),s("li",[t._v("3、每一组数据前面补两个0")]),t._v(" "),s("li",[t._v("4、按 base64编码映射成字符，最后一组数据不足6位补的0如果为2个，则 base64最后还需加一个'='，如果补了4个，则加两个'='。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("举个例子，\"Ma\"的 base64编码：\n-> 在 utf-8编码下，其二进制数据为：0100 1101  0110 0001\n-> 分组：010011 010110 000100   （注意，最后一组补了2个0）\n-> 前面补0：00010011 00010110 00000100\n-> 按 base64映射：19=>T  22=>W  4=>E\n-> 最后为：TWE=\n\n通过 window.btoa('Ma') 测试成功!\n")])])]),s("h4",{attrs:{id:"escape、encodeuri和-encodeuricomponent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#escape、encodeuri和-encodeuricomponent","aria-hidden":"true"}},[t._v("#")]),t._v(" escape、encodeURI和 encodeURIComponent")]),t._v(" "),s("ul",[s("li",[t._v("escape (已不提倡使用)")])]),t._v(" "),s("blockquote",[s("p",[t._v('除了 ASCII字母、数字和符号"@+-*/._" 以外，其它将编码为 unicode值（16进制）。unicode编码在1字节内，格式为%xx，超过1字节，格式为%uxxxx')])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("escape")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'春节'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// %u6625%u8282")]),t._v("\n\n对应的解码：\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unescape")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%u6625%u8282'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 春节")]),t._v("\n")])])]),s("ul",[s("li",[t._v("encodeURI")])]),t._v(" "),s("blockquote",[s("p",[t._v('真正用于编码 URL的函数。除了一些常见的符号外，对其它一些网址中有特殊含义的符号 "; / ? : @ & = + $ , #" 也不进行编码。编码方式为：unicode值 -> utf-8编码成二进制 -> 16进制表示 -> 前面再加上%')])]),t._v(" "),s("div",{staticClass:"language-jS extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "春节"的 utf-8编码下16进制表示为 E6 98 A5 E8 8A 82')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURI")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'春节@'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "%E6%98%A5%E8%8A%82@"')]),t._v("\n\n对应的解码：\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("decodeURI")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%E6%98%A5%E8%8A%82'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '春节'")]),t._v("\n")])])]),s("ul",[s("li",[t._v("encodeURIComponent")])]),t._v(" "),s("blockquote",[s("p",[t._v('编码方式与 encodeURI大体一致，只是该方式会对 "; / ? : @ & = + $ , #"这些特殊符号也进行编码')])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURIComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'春节@'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "%E6%98%A5%E8%8A%82%40"')]),t._v("\n\n对应的解码：\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("decodeURIComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%E6%98%A5%E8%8A%82%40"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '春节@'")]),t._v("\n")])])]),s("p",[t._v("总结：encodeURI和 encodeURIComponent将字符编码为 utf-8编码的16进制表示，即转化后所有都是 ascii码。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th",[t._v("ascii字符")]),t._v(" "),s("th",[t._v("特殊符号")]),t._v(" "),s("th",[t._v("其他符号")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("encodeURI")]),t._v(" "),s("td",[t._v("×")]),t._v(" "),s("td",[t._v("×")]),t._v(" "),s("td",[t._v("√")])]),t._v(" "),s("tr",[s("td",[t._v("encodeURIComponent")]),t._v(" "),s("td",[t._v("x")]),t._v(" "),s("td",[t._v("√")]),t._v(" "),s("td",[t._v("√")])])])]),t._v(" "),s("p",[t._v("encodeURI设计是为了对整个 uri进行编码，而 encodeURIComponent设计是对 uri查询参数进行编码，而前端使用场景更多的是对 url的查询参数进行编码，所以主用 encodeURIComponent。")]),t._v(" "),s("h4",{attrs:{id:"latin1编码-别名：iso-8859-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#latin1编码-别名：iso-8859-1","aria-hidden":"true"}},[t._v("#")]),t._v(" Latin1编码(别名：ISO-8859-1)")]),t._v(" "),s("p",[t._v("Latin1字符集是 ascii字符集的扩展，是 8bit大小的字符集，字符编码在 0 - 255之间。")]),t._v(" "),s("p",[t._v("ascii、Latin1和 utf-8之间的关系：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("ascii是 Latin1、utf-8的子集，ascii编码的文件可以被 Latin1或 utf-8解码；\nLatin1后面的字符被 ascii支持，所以 ascii解码 Latin1可能会报错\nLatin1后面的字符在 utf-8中是以2字节存储的，所以如果用 utf-8解码 Latin1会乱码\n\n")])])]),s("h4",{attrs:{id:"atob和-btoa原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#atob和-btoa原理","aria-hidden":"true"}},[t._v("#")]),t._v(" atob和 btoa原理")]),t._v(" "),s("p",[t._v("atob和 btoa均是基于 Latin1编码实现的，所以字符编码超过 255将会报错")]),t._v(" "),s("ul",[s("li",[t._v("atob")])]),t._v(" "),s("blockquote",[s("p",[t._v("用于将 base64解码为字符串, 内部流程是：ascii字符 -> base64解码成二进制 -> Latin1解码为字符")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("atob(\"YXBwbGU=\")    // 'apple'\n")])])]),s("ul",[s("li",[t._v("btoa")])]),t._v(" "),s("blockquote",[s("p",[t._v("用于将字符编码为 base64, 内部流程是：Latin1编码字符为二进制 -> base64编码 -> ascii字符")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 使用 ascii字符串时，可正常编码\nbtoa('apple')   // \"YXBwbGU=\"\n\n// 使用中文时，由于超出 Latin1编码范围，则报错\nbtoa('中文')    // 报错 The string to be encoded contains characters outside of the Latin1 range.\n")])])]),s("p",[t._v("由上面可以看出，如果通过 btoa编码中文将会报错，那应该怎么将中文编码为 base64呢，需要满足如下两点：")]),t._v(" "),s("ul",[s("li",[t._v("1、能够将中文编码为 Latin1所允许的字符")]),t._v(" "),s("li",[t._v("2、转化之后可以再转换回中文")])]),t._v(" "),s("p",[t._v("那么，有什么方法满足上面的要求呢？对的，就是 encodeURIComponent/ encodeURI。通过这两个方法编码中文后，编码的格式为%xx，均属于 Latin1允许字符内，并且有个 % 可以作为标识，解码回中文。故而含有中文的 base64编码应该为：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'中文abc'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" baseData "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("btoa")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURIComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编码成 base64")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" decodeStr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("decodeURIComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("atob")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("baseData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解码成字符串 '中文abc'")]),t._v("\n")])])]),s("h4",{attrs:{id:"charcodeat和-fromcharcode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#charcodeat和-fromcharcode","aria-hidden":"true"}},[t._v("#")]),t._v(" charCodeAt和 fromCharCode")]),t._v(" "),s("ul",[s("li",[t._v("charCodeAt")])]),t._v(" "),s("blockquote",[s("p",[t._v("获取字符在字符编码")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" code "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 97")]),t._v("\n")])])]),s("ul",[s("li",[t._v("fromCharCode")])]),t._v(" "),s("blockquote",[s("p",[t._v("由字符编码返回字符")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fromCharCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("97")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'a'")]),t._v("\n")])])])])}],!1,null,null,null);a.default=e.exports}}]);